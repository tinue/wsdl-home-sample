<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>ch.erzberger.wsdl-sample</groupId>
    <artifactId>parent</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>hello-parent</name>
    <description>Parent pom for the hello wsdl sample</description>

    <modules>
        <module>server</module>
        <module>client</module>
        <module>library</module>
    </modules>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>19</java.version>
        <maven.compiler.source>19</maven.compiler.source>
        <maven.compiler.target>19</maven.compiler.target>
        <maven.build.helper.version>3.3.0</maven.build.helper.version>
        <maven.source.plugin.version>3.2.1</maven.source.plugin.version>
        <maven.resources.plugin.version>3.3.0</maven.resources.plugin.version>
        <maven.enforcer.plugin.version>3.1.0</maven.enforcer.plugin.version>
        <maven.assembly.plugin.version>3.4.2</maven.assembly.plugin.version>
        <jaxws.maven.plugin.version>4.0.0</jaxws.maven.plugin.version>
        <jakarta.version>4.0.0</jakarta.version>
        <jaxb2.maven.plugin.version>3.1.0</jaxb2.maven.plugin.version>
        <junit-jupiter.version>5.9.2</junit-jupiter.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- Jakarta RI -->
            <dependency>
                <groupId>jakarta.xml.bind</groupId>
                <artifactId>jakarta.xml.bind-api</artifactId>
                <version>${jakarta.version}</version>
            </dependency>
            <dependency>
                <groupId>jakarta.xml.ws</groupId>
                <artifactId>jakarta.xml.ws-api</artifactId>
                <version>${jakarta.version}</version>
            </dependency>
            <dependency>
                <groupId>com.sun.xml.ws</groupId>
                <artifactId>jaxws-rt</artifactId>
                <version>${jakarta.version}</version>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-api</artifactId>
                <version>${junit-jupiter.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <!-- Optional, it simplifies checking for dependency updates -->
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>${maven.enforcer.plugin.version}</version>
                    <executions>
                        <execution>
                            <id>enforce-maven</id>
                            <goals>
                                <goal>enforce</goal>
                            </goals>
                            <configuration>
                                <rules>
                                    <requireMavenVersion>
                                        <version>3.8.1</version>
                                    </requireMavenVersion>
                                </rules>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <!-- Generates stubs from wsdl / xsd -->
                <plugin>
                    <groupId>com.sun.xml.ws</groupId>
                    <artifactId>jaxws-maven-plugin</artifactId>
                    <version>${jaxws.maven.plugin.version}</version>
                </plugin>
                <!-- Generates an executable jar file, in order to get a standalone server for docker -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>${maven.assembly.plugin.version}</version>
                </plugin>
                <!-- Adds the sources generated by jaxws to the project build path -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>${maven.build.helper.version}</version>
                </plugin>
                <!-- Makes a jar file with sources -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>${maven.source.plugin.version}</version>
                </plugin>
                <!-- Maven resource filtering supports the build, e.g. to copy real certificates, replacing the dummy ones -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${maven.resources.plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>
