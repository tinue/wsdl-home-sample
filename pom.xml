<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.0.1</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <groupId>ch.erzberger</groupId>
    <artifactId>hello</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>hello</name>
    <description>Hello WSDL Server and Client sample</description>

    <modules>
        <module>server</module>
        <module>client</module>
    </modules>

    <properties>
        <java.version>19</java.version>
        <maven.build.helper.version>3.3.0</maven.build.helper.version>
        <maven.resources.plugin.version>3.3.0</maven.resources.plugin.version>
        <maven.enforcer.plugin.version>3.1.0</maven.enforcer.plugin.version>
        <maven.assembly.plugin.version>3.4.2</maven.assembly.plugin.version>
        <jaxws.maven.plugin.version>4.0.0</jaxws.maven.plugin.version>
        <jakarta.version>4.0.0</jakarta.version>
        <wsdl4j.version>1.6.3</wsdl4j.version>
        <jaxb2.maven.plugin.version>3.1.0</jaxb2.maven.plugin.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- Jakarta RI -->
            <dependency>
                <groupId>jakarta.xml.bind</groupId>
                <artifactId>jakarta.xml.bind-api</artifactId>
                <version>${jakarta.version}</version>
            </dependency>
            <dependency>
                <groupId>jakarta.xml.ws</groupId>
                <artifactId>jakarta.xml.ws-api</artifactId>
                <version>${jakarta.version}</version>
            </dependency>
            <dependency>
                <groupId>com.sun.xml.ws</groupId>
                <artifactId>jaxws-rt</artifactId>
                <version>${jakarta.version}</version>
            </dependency>

            <!-- Spring boot needs this library to generate WSDL files on the fly -->
            <dependency>
                <groupId>wsdl4j</groupId>
                <artifactId>wsdl4j</artifactId>
                <version>${wsdl4j.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <!-- Optional, it simplifies checking for dependency updates -->
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>${maven.enforcer.plugin.version}</version>
                    <executions>
                        <execution>
                            <id>enforce-maven</id>
                            <goals>
                                <goal>enforce</goal>
                            </goals>
                            <configuration>
                                <rules>
                                    <requireMavenVersion>
                                        <version>3.8.1</version>
                                    </requireMavenVersion>
                                </rules>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <!-- Generates Java classes out of XSD -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>jaxb2-maven-plugin</artifactId>
                    <version>${jaxb2.maven.plugin.version}</version>
                </plugin>
                <!-- Generates client classes from wsdl / xsd -->
                <plugin>
                    <groupId>com.sun.xml.ws</groupId>
                    <artifactId>jaxws-maven-plugin</artifactId>
                    <version>${jaxws.maven.plugin.version}</version>
                </plugin>

                <!-- Generates an executable jar file, to be used in the docker container -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>${maven.assembly.plugin.version}</version>
                </plugin>
                <!-- Optional, generates a jar file with all sources -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>${maven.build.helper.version}</version>
                    <executions>
                        <execution>
                            <phase>generate-sources</phase>
                            <goals>
                                <goal>add-source</goal>
                            </goals>
                            <configuration>
                                <sources>
                                    <source>${project.build.directory}/generated-sources/</source>
                                </sources>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <!-- Simplify development, copies real certificates, replacing the dummy ones -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${maven.resources.plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>
